{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/reservations.ts"],"sourcesContent":["export interface SafariTour {\n  id: string;\n  name: string;\n  description: string;\n  duration: string;\n  price: number;\n  maxPassengers: number;\n  features: string[];\n  availableTimeSlots: string[];\n}\n\nexport interface Reservation {\n  id: string;\n  tourId: string;\n  customerName: string;\n  customerEmail: string;\n  customerPhone: string;\n  date: string;\n  timeSlot: string;\n  passengers: number;\n  totalPrice: number;\n  status: 'pending' | 'confirmed' | 'cancelled';\n  paymentStatus: 'pending' | 'completed' | 'failed';\n  createdAt: string;\n  specialRequests?: string;\n}\n\n// Mock safari tour data\nexport const SAFARI_TOURS: SafariTour[] = [\n  {\n    id: 'classic-safari',\n    name: 'Classic Safari Adventure',\n    description: 'Experience the thrill of wildlife viewing in our comfortable 4x4 jeeps. Perfect for families and first-time safari goers.',\n    duration: '3 hours',\n    price: 150,\n    maxPassengers: 6,\n    features: [\n      'Professional wildlife guide',\n      'Complimentary refreshments',\n      'Wildlife photography opportunities',\n      'Safety equipment included'\n    ],\n    availableTimeSlots: ['06:00', '09:00', '14:00', '17:00']\n  },\n  {\n    id: 'premium-safari',\n    name: 'Premium Safari Experience',\n    description: 'Luxury safari experience with exclusive access to premium wildlife areas and gourmet refreshments.',\n    duration: '5 hours',\n    price: 280,\n    maxPassengers: 4,\n    features: [\n      'Expert naturalist guide',\n      'Gourmet lunch included',\n      'Premium binoculars provided',\n      'Exclusive wildlife areas',\n      'Professional photography service'\n    ],\n    availableTimeSlots: ['06:00', '11:00', '15:00']\n  },\n  {\n    id: 'sunset-safari',\n    name: 'Sunset Safari Special',\n    description: 'Witness the magical African sunset while observing wildlife in their natural habitat.',\n    duration: '4 hours',\n    price: 200,\n    maxPassengers: 6,\n    features: [\n      'Sunset viewing experience',\n      'Evening wildlife activity',\n      'Traditional refreshments',\n      'Campfire storytelling'\n    ],\n    availableTimeSlots: ['15:30', '16:00']\n  },\n  {\n    id: 'full-day-safari',\n    name: 'Full Day Safari Expedition',\n    description: 'Complete safari experience covering multiple wildlife zones with lunch and extensive game viewing.',\n    duration: '8 hours',\n    price: 450,\n    maxPassengers: 6,\n    features: [\n      'Multiple wildlife zones',\n      'Full meals included',\n      'Extended game viewing',\n      'Rest stops at scenic locations',\n      'Comprehensive wildlife education'\n    ],\n    availableTimeSlots: ['06:00']\n  }\n];\n\n// In-memory storage for reservations (in a real app, this would be a database)\nlet reservations: Reservation[] = [];\n\n// Utility functions\nexport function generateReservationId(): string {\n  return 'RES-' + Date.now().toString(36).toUpperCase() + '-' + Math.random().toString(36).substr(2, 5).toUpperCase();\n}\n\nexport function getTourById(tourId: string): SafariTour | undefined {\n  return SAFARI_TOURS.find(tour => tour.id === tourId);\n}\n\nexport function getAllTours(): SafariTour[] {\n  return SAFARI_TOURS;\n}\n\nexport function createReservation(reservationData: Omit<Reservation, 'id' | 'createdAt' | 'status' | 'paymentStatus'>): Reservation {\n  const reservation: Reservation = {\n    ...reservationData,\n    id: generateReservationId(),\n    status: 'pending',\n    paymentStatus: 'pending',\n    createdAt: new Date().toISOString()\n  };\n  \n  reservations.push(reservation);\n  return reservation;\n}\n\nexport function getReservationById(id: string): Reservation | undefined {\n  return reservations.find(reservation => reservation.id === id);\n}\n\nexport function getAllReservations(): Reservation[] {\n  return reservations;\n}\n\nexport function updateReservationStatus(id: string, status: Reservation['status']): boolean {\n  const reservation = reservations.find(r => r.id === id);\n  if (reservation) {\n    reservation.status = status;\n    return true;\n  }\n  return false;\n}\n\nexport function updatePaymentStatus(id: string, paymentStatus: Reservation['paymentStatus']): boolean {\n  const reservation = reservations.find(r => r.id === id);\n  if (reservation) {\n    reservation.paymentStatus = paymentStatus;\n    return true;\n  }\n  return false;\n}\n\n// Validation functions\nexport function validateReservationData(data: any): { isValid: boolean; errors: string[] } {\n  const errors: string[] = [];\n  \n  if (!data.tourId || !getTourById(data.tourId)) {\n    errors.push('Invalid tour selection');\n  }\n  \n  if (!data.customerName || data.customerName.trim().length < 2) {\n    errors.push('Customer name must be at least 2 characters');\n  }\n  \n  if (!data.customerEmail || !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(data.customerEmail)) {\n    errors.push('Valid email address is required');\n  }\n  \n  if (!data.customerPhone || data.customerPhone.trim().length < 10) {\n    errors.push('Valid phone number is required');\n  }\n  \n  if (!data.date || new Date(data.date) <= new Date()) {\n    errors.push('Reservation date must be in the future');\n  }\n  \n  if (!data.timeSlot) {\n    errors.push('Time slot selection is required');\n  }\n  \n  if (!data.passengers || data.passengers < 1) {\n    errors.push('At least 1 passenger is required');\n  }\n  \n  const tour = getTourById(data.tourId);\n  if (tour && data.passengers > tour.maxPassengers) {\n    errors.push(`Maximum ${tour.maxPassengers} passengers allowed for this tour`);\n  }\n  \n  return {\n    isValid: errors.length === 0,\n    errors\n  };\n}\n\n// Check availability for a specific date and time slot\nexport function checkAvailability(tourId: string, date: string, timeSlot: string): boolean {\n  // In a real system, this would check against actual bookings\n  // For now, we'll simulate some basic availability logic\n  const existingReservations = reservations.filter(\n    r => r.tourId === tourId && \n         r.date === date && \n         r.timeSlot === timeSlot && \n         r.status !== 'cancelled'\n  );\n  \n  const tour = getTourById(tourId);\n  if (!tour) return false;\n  \n  // Simple availability check - allow up to 2 bookings per time slot\n  return existingReservations.length < 2;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/api/tours/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { getAllTours, getTourById } from '@/lib/reservations';\n\nexport async function GET(request: Request) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const tourId = searchParams.get('id');\n    \n    if (tourId) {\n      const tour = getTourById(tourId);\n      if (!tour) {\n        return NextResponse.json(\n          { error: 'Tour not found' },\n          { status: 404 }\n        );\n      }\n      return NextResponse.json(tour);\n    }\n    \n    const tours = getAllTours();\n    return NextResponse.json(tours);\n  } catch (error) {\n    console.error('Error fetching tours:', error);\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,IAAI,OAAgB;IACxC,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,SAAS,aAAa,GAAG,CAAC;QAEhC,IAAI,QAAQ;YACV,MAAM,OAAO,CAAA,GAAA,4HAAA,CAAA,cAAW,AAAD,EAAE;YACzB,IAAI,CAAC,MAAM;gBACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;oBAAE,OAAO;gBAAiB,GAC1B;oBAAE,QAAQ;gBAAI;YAElB;YACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAC3B;QAEA,MAAM,QAAQ,CAAA,GAAA,4HAAA,CAAA,cAAW,AAAD;QACxB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}